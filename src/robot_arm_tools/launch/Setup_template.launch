<?xml version="1.0" ?>
<launch>
    <!--ADD ONS PARAMETERS -->
    <arg name="use_rviz_gui" default="false"/>
    <arg name="use_gazebo_gui" default="false"/>

    <!-- ROBOT PARAMETERS -->
    <param name="robotName" value="<robot>"/>   <!--To fill !-->
    <param name="groupName" value="<robot_group>"/> <!--To fill !-->
    <param name="collisionBaseLinksNames" type="yaml" value="[robot_link0,...]"/>   <!--To fill !-->

    <arg name="initial_configuration_name" value="<robot0>"/>  <!--To fill !-->
    <param name="initialConfigurationName" value="$(arg initial_configuration_name)"/> 

    <arg name="kinematics_solver" default="bio_ik/BioIKKinematicsPlugin"/> 
    
    <arg name="planner_name" default="RRTConnect"/>
    <param name="plannerName" value="$(arg planner_name)"/>
    <arg name="planner_objective" default="PathLengthOptimizationObjective"/>
    <param name="plannerObjective" value="$(arg planner_objective)"/>

    <!-- ROBOT SAFETY PARAMETERS -->
    <arg name="safety_distance" default="0.03"/>

    <!-- ROBOT TOOL PARAMETERS -->
    <arg name="tool_name" default="none"/>
    <param name="toolName" value="$(arg tool_name)"/>

    <!-- END EFFECTOR AND GRIPPER --> <!--To fill and adapt if there is no gripper !-->
    <arg name="load_gripper" value="false" unless="$(eval arg('tool_name') == 'gripper')"/>
    <arg name="load_gripper" value="true" if="$(eval arg('tool_name') == 'gripper')"/>

    <arg name="end_effector_name" value="<robot>_$(arg tool_name)" unless="$(eval arg('tool_name') == 'none' or arg('tool_name') == 'gripper')"/> 
    <arg name="end_effector_name" value="<robot_gripper_EE>" if="$(eval arg('tool_name') == 'gripper')"/> 
    <arg name="end_effector_name" value="<robot_EE>" if="$(eval arg('tool_name') == 'none')"/> 
    
    <param name="endEffectorName" value="$(arg end_effector_name)"/>

    <!-- ROBOT CALIBRATION PARAMETERS -->
    <arg name="calibration" default="false"/>
    <param name="calibration" value="$(arg calibration)"/>

    <arg name="calibrated_model_file" default="" unless="$(arg calibration)"/> 
    <arg name="calibrated_model_file" default="TODO !" if="$(arg calibration)"/>

    <rosparam file="$(arg calibrated_model_file)" command="load" if="$(arg calibration)"/>

    <!-- EXECUTION PARAMETERS -->
    <node pkg="robot_arm_tools" name="pause_button" type="pause_button"/>
    <arg name="simulation" default="true"/>
    <param name="simulation" value="$(arg simulation)"/>
    <arg name="robot_ip" default="<robot_IP>" />    <!--To fill !-->
    <param name="robotIP" value="$(arg robot_ip)"/>
    <arg name="gazebo" default="false"/>

    <!-- LOCALISATION PARAMETERS -->
    <!--TODO Take into account an eventual robot base offset ? -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 world <robot_link0>" />  <!--To fill !-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world map" /> 
    
    <!-- LAUNCH INCLUDES -->

    <!-- MoveIt based simulation -->
    <group if="$(eval arg('simulation') and not arg('gazebo'))">
        <!--To adapt !-->
        <include file="<moveit_simulated_hardware_launch_file.launch>" pass_all_args="true">
            <!--<arg name="load_gripper" value="$(arg load_gripper)"/>-->
            <!--<arg name="use_rviz_gui" value="$(arg use_rviz_gui)"/>-->
        </include>

        <param name="/move_group/initial" type="yaml" value="[{group: <robot_group>, pose: $(arg initial_configuration_name)}]"/>
    </group>

    <!-- Real hardware execution -->
    <group unless="$(arg simulation)">
        <!--To adapt !-->
        <include file="<real_hardware_launch_file.launch>" pass_all_args="true">
            <!--<arg name="load_gripper" value="$(arg load_gripper)"/>-->
            <!--<arg name="robot_ip" default="$(arg robot_ip)" />-->
            <!--<arg name="use_rviz_gui" value="$(arg use_rviz_gui)"/>-->
        </include>
    </group>

    <!-- Gazebo based simulation -->
    <group if="$(eval arg('simulation') and arg('gazebo'))">
        <!--To adapt or comment if there is no Gazebo support !-->
        <include file="<gazebo_simulated_hardware_launch_file.launch>" pass_all_args="true">
            <!--<arg name="load_gripper" value="$(arg load_gripper)"/>-->
            <!--<arg name="use_rviz_gui" value="$(arg use_rviz_gui)"/>-->
            <!--<arg name="use_gazebo_gui" value="$(arg use_gazebo_gui)"/>-->
            <!--<arg name="controller" value="position_joint_trajectory_controller"/>-->
        </include>
    </group>

    <!-- Overwritting kinematics plugin for calibration -->
    <!--<param name="robot_description_kinematics/<robot_group>/kinematics_solver" value="robot_kinematics_plugin" if="$(arg calibration)"/>-->
    <param name="robot_description_kinematics/<robot_group>/kinematics_solver" value="$(arg kinematics_solver)"/>

    <param name="robot_description_kinematics/<robot_group>/mode" value="gd_c_8"/>

    <param name="robot_description_kinematics/<robot_group>/kinematics_solver_search_resolution" value="0.00001"/>  <!--Not used for bio_ik-->
    <param name="robot_description_kinematics/<robot_group>/dpos" value="0.00001"/>  <!--Used for bio_ik-->
    <param name="robot_description_kinematics/<robot_group>/drot" value="0.00001"/>  <!--Used for bio_ik-->
    <param name="robot_description_kinematics/<robot_group>/dtwist" value="0.00001"/>  <!--Used for bio_ik-->

    <param name="robot_description_kinematics/<robot_group>/kinematics_solver_timeout" value="1.0"/>

    <!-- Overwritting robot_description and robot_description_semantic --> <!--To fill and adapt if there is a gripper !-->
    <param name="robot_description" command="/bin/bash $(find robot_arm_tools)/scripts/GetRobotDescription.sh 'robot_arm_tools Setup_template.launch simulation:=$(arg simulation) gazebo:=$(arg gazebo)' '$(find robot_arm_tools)/config/tools/$(arg tool_name)/$(arg tool_name).urdf.xacro robot_name:=<robot> safety_distance:=$(arg safety_distance)' '$(arg end_effector_name)' '$(arg calibrated_model_file)'" unless="$(eval (arg('tool_name') == 'none' and not arg('calibration')) or arg('tool_name') == 'gripper')"/>
    <param name="robot_description_semantic" command="/bin/bash $(find robot_arm_tools)/scripts/GetRobotDescriptionSemantic.sh 'robot_arm_tools Setup_template.launch simulation:=$(arg simulation) gazebo:=$(arg gazebo)' '$(find robot_arm_tools)/config/tools/$(arg tool_name)/$(arg tool_name).urdf.xacro robot_name:=<robot> safety_distance:=$(arg safety_distance)' '$(arg end_effector_name)' '$(arg calibrated_model_file)'" unless="$(eval (arg('tool_name') == 'none' and not arg('calibration')) or arg('tool_name') == 'gripper')"/>

</launch>
